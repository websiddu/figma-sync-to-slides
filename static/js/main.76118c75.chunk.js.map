{"version":3,"sources":["assets/loading.svg","assets/done.svg","assets/coach-marks.svg","assets/sorts/none.svg","assets/sorts/alphabetical.svg","assets/sorts/reverse-alphabetical.svg","assets/sorts/reverse.svg","assets/error.svg","assets/lock.svg","assets/settings.svg","assets/logo.svg","assets/logo-text.svg","assets/g.svg","api/storage.js","api/slides.js","components/AddressBar.js","components/List.js","api/auth.js","components/Message.js","components/StatusBar.js","components/Login.js","components/Loading.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Storage","img","API_VERSION","BUCKET","boundary","delimiter","this","close_delim","contentType","metadata","name","id","mimeType","multipartRequestBody","JSON","stringify","base64Data","promise","Promise","resolve","reject","window","gapi","client","storage","objects","delete","bucket","object","then","response","err","request","path","method","params","uploadType","headers","body","execute","Slides","presentationId","slides","requests","data","currenSlidesData","imageId","emu4M","magnitude","unit","pageSize","width","height","newSlides","oldSlides","buildRequests","Message","setState","msg","get","currentSlidesData","AddressBar","title","parent","postMessage","pluginMessage","type","insertSlides","getInsertSlideRequests","createImages","getCreateImageRequests","insert","newImageRequests","map","d","pageId","replace","createImage","objectId","url","mediaLink","elementProperties","pageObjectId","size","transform","scaleX","scaleY","translateX","translateY","updateImageRequests","replaceImage","imageObjectId","auth","getToken","access_token","imageReplaceMethod","forEach","checkIfSlideAlreadyExists","push","createSlide","find","s","slideId","presentations","batchUpdate","deleteObject","res","fields","result","all","a","every","e","status","StatusBar","isDisabled","setTimeout","ListComponent","uploadDone","deleteAllImages","props","state","handleURL","bind","clearAddressBar","openSlidesFile","open","event","target","value","getIdFromURL","slidesData","checkPermissions","newData","split","undefined","className","placeholder","onChange","src","coachMark","alt","onClick","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","points","x1","x2","y1","y2","cx","cy","r","React","Component","IMAGES","NONE","ALPHABETICAL","REVERSE_ALPHABETICAL","REVERSE","SORT_TYPE","List","sortState","originalData","handleSelect","handleSelectAll","sortFrames","checkSelectAllButtonStatus","frames","i","isSelected","checked","frame","images","isUploadingDone","clickedItem","findIndex","realId","sort","b","localeCompare","reverse","ifAllTrue","selectAllCheckbox","document","getElementById","indeterminate","ifAllFalse","htmlFor","flipKey","item","index","key","flipId","isUploading","opposite","when","loader","done","host","DISCOVERY_DOCS","addEventListener","setToken","success","authenticateAndGetToken","fetch","json","read_key","write_key","encodeURIComponent","accessToken","Math","random","signOut","initClient","init","clientId","discoveryDocs","scope","loading","error","lock","handleSync","handleMenu","logOut","hideMenu","setWrapperRef","handleClickOutside","isMenuOpen","removeEventListener","node","wrapperRef","contains","selectedFrames","filter","showLoadingIndicator","uploadImagesToCloudStore","uploadedImgs","selectedImages","base64String","btoa","Uint8Array","imageData","reduce","byte","String","fromCharCode","j","uploadedImages","updateSignInStatus","isSignedIn","isFinishedChecking","disabled","ref","style","flex","tabIndex","settings","Login","signIn","logo","logoText","g","Loading","x","y","opacity","attributeName","attributeType","values","begin","dur","repeatCount","App","load","page","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","imgData","l","handleUpload"],"mappings":"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","file":"static/js/main.76118c75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.1023c8b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/done.34069618.svg\";","module.exports = __webpack_public_path__ + \"static/media/coach-marks.5d616838.svg\";","module.exports = __webpack_public_path__ + \"static/media/none.a50a6883.svg\";","module.exports = __webpack_public_path__ + \"static/media/alphabetical.aaaa5440.svg\";","module.exports = __webpack_public_path__ + \"static/media/reverse-alphabetical.672f1310.svg\";","module.exports = __webpack_public_path__ + \"static/media/reverse.92068cd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.f524a4a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.584b0837.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.8794411d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.85b83bad.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo-text.24295080.svg\";","module.exports = __webpack_public_path__ + \"static/media/g.b180be65.svg\";","export default class Storage {\n  API_VERSION = \"v1\";\n  BUCKET = \"sync-to-slides.google.com.a.appspot.com\";\n  boundary = \"-------314159265358979323846\";\n  delimiter = \"\\r\\n--\" + this.boundary + \"\\r\\n\";\n  close_delim = \"\\r\\n--\" + this.boundary + \"--\";\n  contentType = \"image/png\";\n\n  constructor(img) {\n    this.metadata = {\n      name: img.id + \".png\",\n      mimeType: this.contentType\n    };\n\n    this.multipartRequestBody =\n      this.delimiter +\n      \"Content-Type: application/json\\r\\n\\r\\n\" +\n      JSON.stringify(this.metadata) +\n      this.delimiter +\n      \"Content-Type: \" +\n      this.contentType +\n      \"\\r\\n\" +\n      \"Content-Transfer-Encoding: base64\\r\\n\" +\n      \"\\r\\n\" +\n      img.base64Data +\n      this.close_delim;\n  }\n\n  async delete(name) {\n    let promise = new Promise((resolve, reject) => {\n      window.gapi.client.storage.objects\n        .delete({\n          bucket: this.BUCKET,\n          object: name\n        })\n        .then(\n          response => {\n            resolve(response);\n          },\n          err => {\n            reject(err);\n          }\n        );\n    });\n    return promise;\n  }\n\n  async insert() {\n    let request = window.gapi.client.request({\n      path: `/upload/storage/${this.API_VERSION}/b/${this.BUCKET}/o`,\n      method: \"POST\",\n      params: { uploadType: \"multipart\" },\n      headers: {\n        \"Content-Type\": `multipart/mixed; boundary=\"${this.boundary}\"`\n      },\n      body: this.multipartRequestBody\n    });\n\n    let promise = new Promise((resolve, reject) => {\n      request.execute(\n        response => {\n          resolve(response);\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n\n    return promise;\n  }\n}\n","import Storage from \"./storage\";\n\nexport default class Slides {\n  requests = [];\n  data = [];\n  currenSlidesData = [];\n  imageId = \"MyImage_01\";\n  emu4M = {\n    magnitude: 4000000,\n    unit: \"EMU\",\n  };\n  pageSize = {\n    width: this.emu4M,\n    height: this.emu4M,\n  };\n  newSlides = [];\n  oldSlides = [];\n  presentationId = \"\";\n\n  constructor(presentationId, slides) {\n    this.presentationId = presentationId;\n\n    if (slides) {\n      this.data = slides;\n      this.buildRequests();\n    }\n  }\n\n  async buildRequests() {\n    window.Message.setState({ msg: \"Preparing the images...\" });\n    let currentSlidesData = await this.get(this.presentationId);\n\n    window.AddressBar.setState({\n      data: {\n        id: currentSlidesData.presentationId,\n        title: currentSlidesData.title,\n      },\n    });\n\n    window.parent.postMessage(\n      {\n        pluginMessage: {\n          type: \"store-preso-info\",\n          data: {\n            id: currentSlidesData.presentationId,\n            title: currentSlidesData.title,\n          },\n        },\n      },\n      \"*\"\n    );\n\n    this.currentSlidesData = currentSlidesData;\n    this.pageSize = currentSlidesData.pageSize;\n    let insertSlides = this.getInsertSlideRequests();\n    let createImages = this.getCreateImageRequests();\n    this.requests = [...insertSlides, ...createImages];\n\n    this.insert();\n  }\n\n  getCreateImageRequests() {\n    let newImageRequests = this.newSlides.map((d) => {\n      let pageId = d.name.replace(\".png\", \"\");\n      let objectId = `_img_${pageId}`;\n      return {\n        createImage: {\n          objectId: objectId,\n          url: d.mediaLink,\n          elementProperties: {\n            pageObjectId: pageId,\n            size: this.pageSize,\n            transform: {\n              scaleX: 1,\n              scaleY: 1,\n              translateX: 0,\n              translateY: 0,\n              unit: \"EMU\",\n            },\n          },\n        },\n      };\n    });\n\n    let updateImageRequests = this.oldSlides.map((d) => {\n      let pageId = d.name.replace(\".png\", \"\");\n      let objectId = `_img_${pageId}`;\n      return {\n        replaceImage: {\n          imageObjectId: objectId,\n          url: `${d.mediaLink}&access_token=${\n            window.gapi.auth.getToken().access_token\n          }`,\n          imageReplaceMethod: \"IMAGE_REPLACE_METHOD_UNSPECIFIED\",\n        },\n      };\n    });\n    return [...newImageRequests, ...updateImageRequests];\n  }\n\n  getInsertSlideRequests() {\n    let insertSlideRequests = [],\n      newSlides = [],\n      oldSlides = [];\n\n    this.data.forEach((d) => {\n      let objectId = d.name.replace(\".png\", \"\");\n      if (!this.checkIfSlideAlreadyExists(objectId)) {\n        newSlides.push(d);\n      } else {\n        oldSlides.push(d);\n      }\n    });\n\n    this.newSlides = newSlides;\n    this.oldSlides = oldSlides;\n    insertSlideRequests = newSlides.map((d) => {\n      let objectId = d.name.replace(\".png\", \"\");\n      return {\n        createSlide: {\n          objectId,\n        },\n      };\n    });\n    return insertSlideRequests;\n  }\n\n  checkIfSlideAlreadyExists(objectId) {\n    return (\n      this.currentSlidesData.slides &&\n      this.currentSlidesData.slides.find((s) => s.objectId === objectId)\n    );\n  }\n\n  async checkPermissions(slideId) {\n    const promise = new Promise((resolve, reject) => {\n      let requests = [\n        {\n          createSlide: {\n            objectId: \"abcxyz123\",\n          },\n        },\n        {\n          deleteObject: {\n            objectId: \"abcxyz123\",\n          },\n        },\n      ];\n\n      window.gapi.client.slides.presentations\n        .batchUpdate({\n          presentationId: slideId,\n          requests: requests,\n        })\n        .then(\n          (res) => {\n            resolve(res);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  async get(slideId) {\n    const promise = new Promise((resolve, reject) => {\n      window.gapi.client.slides.presentations\n        .get({\n          presentationId: slideId,\n          fields: \"pageSize,presentationId,title,slides(objectId,pageElements)\",\n        })\n        .then(\n          (response) => {\n            resolve(response.result);\n          },\n          (err) => {\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  async deleteAllImages(err) {\n    let deleteImages = await Promise.all(\n      this.data.map(async (d) => {\n        let s = new Storage(d.name);\n        let res = await s.delete(d.name);\n        return res;\n      })\n    );\n\n    if (deleteImages.every((e) => e.status === 204) && err.status !== 400) {\n      window.Message.setState({ msg: \"All done!\", type: \"success\" });\n      window.StatusBar.setState({ isDisabled: false });\n\n      setTimeout(() => {\n        window.Message.setState({ msg: \"\", type: \"none\" });\n        window.ListComponent.uploadDone();\n      }, 2000);\n    }\n\n    if (err.status === 400) {\n      window.Message.setState({\n        msg: \"Sync failed, image too large\",\n        type: \"error\",\n      });\n\n      window.ListComponent.uploadDone();\n      window.StatusBar.setState({ isDisabled: false });\n    }\n  }\n\n  insert() {\n    window.Message.setState({ msg: \"Writing to slides...\" });\n    window.gapi.client.slides.presentations\n      .batchUpdate({\n        presentationId: this.presentationId,\n        requests: this.requests,\n      })\n      .then(\n        (response) => {\n          window.Message.setState({\n            msg: \"Cleaning up cloud...\",\n            type: \"loading\",\n          });\n          this.deleteAllImages({ status: 200 });\n        },\n        (err) => {\n          this.deleteAllImages(err);\n        }\n      );\n  }\n}\n","import React from \"react\";\nimport Slides from \"../api/slides\";\nimport coachMark from \"../assets/coach-marks.svg\";\n\nimport \"../styles/AddressBar.scss\";\n\nclass AddressBar extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: null,\n    };\n    this.handleURL = this.handleURL.bind(this);\n    this.clearAddressBar = this.clearAddressBar.bind(this);\n    this.openSlidesFile = this.openSlidesFile.bind(this);\n  }\n\n  componentDidMount() {\n    window.parent.postMessage(\n      { pluginMessage: { type: \"get-preso-info\" } },\n      \"*\"\n    );\n  }\n\n  openSlidesFile() {\n    window.open(\n      `https://docs.google.com/presentation/d/${this.state.data.id}`,\n      \"_blank\"\n    );\n  }\n\n  async handleURL(event) {\n    window.Message.setState({ msg: \"Fetching the slides!\", type: \"loading\" });\n    let url = event.target.value;\n\n    if (url === \"\") {\n      window.Message.setState({ msg: \"\", type: \"\" });\n      return;\n    }\n\n    let id = this.getIdFromURL(url);\n\n    let slides = new Slides(id);\n    let slidesData;\n\n    try {\n      slidesData = await slides.get(id);\n      await slides.checkPermissions(id);\n      window.Message.setState({ msg: \"\", type: \"\" });\n    } catch (err) {\n      let msg = \"Failed to fetch slides!\",\n        type = \"error\";\n      if (err.status === 404) msg = \"Requested file was not found\";\n      if (err.status === 403) {\n        msg = \"You don't have write access\";\n        type = \"lock\";\n      }\n\n      window.Message.setState({ msg, type });\n      return;\n    }\n\n    let newData = {\n      data: window.ListComponent.state.data,\n      id: id,\n    };\n\n    this.setState({\n      data: {\n        id,\n        title: slidesData.title,\n      },\n    });\n\n    window.ListComponent.setState(newData);\n\n    window.parent.postMessage(\n      {\n        pluginMessage: {\n          type: \"store-preso-info\",\n          data: { id: id, title: slidesData.title },\n        },\n      },\n      \"*\"\n    );\n  }\n\n  getIdFromURL(url) {\n    url = url.replace(\"://docs.google.com/presentation/d/\", \"\");\n    url = url.replace(\"https\", \"\");\n    url = url.replace(\"http\", \"\");\n    url = url.split(\"/\");\n\n    return url[0];\n  }\n\n  clearAddressBar() {\n    this.setState({\n      data: undefined,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"AddressBar\">\n        <div className=\"type type--pos-small-normal\">Presentation</div>\n        {!this.state.data && (\n          <input\n            type=\"input\"\n            className=\"input\"\n            placeholder=\"Enter slides url or id...\"\n            onChange={this.handleURL}\n          />\n        )}\n        {!this.state.data && (\n          <div className=\"coachMarks\">\n            <img src={coachMark} className=\"coachMarkImg\" alt=\"Coachmarks\" />\n          </div>\n        )}\n        {this.state.data && (\n          <div className=\"InfoBar\">\n            <div className=\"Name\">{this.state.data.title}</div>\n            <button className=\"iconButton\" onClick={this.openSlidesFile}>\n              <svg\n                fill=\"none\"\n                height=\"14\"\n                width=\"14\"\n                stroke=\"#787878\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\" />\n                <polyline points=\"15 3 21 3 21 9\" />\n                <line x1=\"10\" x2=\"21\" y1=\"14\" y2=\"3\" />\n              </svg>\n            </button>\n            <button className=\"iconButton\" onClick={this.clearAddressBar}>\n              <svg\n                fill=\"none\"\n                height=\"14\"\n                width=\"14\"\n                stroke=\"#787878\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"2\"\n                viewBox=\"0 0 24 24\"\n              >\n                <circle cx=\"12\" cy=\"12\" r=\"10\" />\n                <line x1=\"8\" x2=\"16\" y1=\"12\" y2=\"12\" />\n              </svg>\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AddressBar;\n","import React from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport { Flipper, Flipped } from \"react-flip-toolkit\";\n\nimport loader from \"../assets/loading.svg\";\nimport done from \"../assets/done.svg\";\nimport \"../styles/List.scss\";\n\nimport NONE from \"../assets/sorts/none.svg\";\nimport ALPHABETICAL from \"../assets/sorts/alphabetical.svg\";\nimport REVERSE_ALPHABETICAL from \"../assets/sorts/reverse-alphabetical.svg\";\nimport REVERSE from \"../assets/sorts/reverse.svg\";\nconst IMAGES = [NONE, ALPHABETICAL, REVERSE_ALPHABETICAL, REVERSE];\nconst SORT_TYPE = [\"No sort\", \"Sorted a → z\", \"Sorted z → a\", \"Sorted reverse\"];\n\nclass List extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      data: [],\n      sortState: 0,\n      originalData: [],\n    };\n\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleSelectAll = this.handleSelectAll.bind(this);\n    this.sortFrames = this.sortFrames.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.checkSelectAllButtonStatus();\n  }\n\n  handleSelectAll(event) {\n    let frames = this.state.data;\n    frames.forEach((e, i) => (frames[i].isSelected = event.target.checked));\n    this.setState({ data: frames });\n\n    let frame = frames.find((s) => s.isSelected === true);\n    window.StatusBar.setState({\n      isDisabled: frame ? false : true,\n    });\n  }\n\n  uploadDone() {\n    let images = this.state.data;\n    images = images.map((e) => {\n      e.isUploadingDone = false;\n      return e;\n    });\n    this.setState({ data: images });\n  }\n\n  handleSelect(event) {\n    let frames = this.state.data;\n    let clickedItem = frames.findIndex(\n      (e) => `frame_${e.realId}` === event.target.id\n    );\n    if (clickedItem >= 0) {\n      frames[clickedItem].isSelected = !frames[clickedItem].isSelected;\n    }\n    this.checkSelectAllButtonStatus();\n    this.setState({ data: frames });\n\n    let frame = frames.find((s) => s.isSelected === true);\n    window.StatusBar.setState({\n      isDisabled: frame ? false : true,\n    });\n  }\n\n  sortFrames() {\n    let frames = this.state.data;\n\n    switch (this.state.sortState % 4) {\n      case 0:\n        frames = frames.sort((a, b) => {\n          return a.name.localeCompare(b.name);\n        });\n        break;\n      case 1:\n        frames = frames.sort((a, b) => {\n          return b.name.localeCompare(a.name);\n        });\n        break;\n      case 2:\n        let l = [...this.state.originalData];\n        frames = l.reverse();\n        break;\n      case 3:\n        frames = [...this.state.originalData];\n        break;\n      default:\n    }\n    let sortState = this.state.sortState + 1;\n\n    this.setState({\n      data: frames,\n      sortState: sortState,\n    });\n  }\n\n  checkSelectAllButtonStatus() {\n    let frames = this.state.data;\n    let ifAllTrue = frames.every((e) => e.isSelected === true);\n\n    let selectAllCheckbox = document.getElementById(\"SelectAll\");\n\n    if (ifAllTrue) {\n      selectAllCheckbox.indeterminate = false;\n      selectAllCheckbox.checked = true;\n      return;\n    }\n\n    let ifAllFalse = frames.every((e) => e.isSelected === false);\n    if (ifAllFalse) {\n      selectAllCheckbox.indeterminate = false;\n      selectAllCheckbox.checked = false;\n      return;\n    }\n\n    if (!ifAllFalse && !ifAllTrue) {\n      selectAllCheckbox.indeterminate = true;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"List\">\n        <div className=\"FrameRow ListHeader\">\n          <div className=\"checkbox\">\n            <input\n              className=\"checkbox__box\"\n              type=\"checkbox\"\n              id=\"SelectAll\"\n              onClick={this.handleSelectAll}\n            />\n            <label className=\"checkbox__label muted\" htmlFor=\"SelectAll\">\n              Frames\n            </label>\n          </div>\n          <div className=\"sorter\">\n            <span className=\"sort-text\">\n              {SORT_TYPE[this.state.sortState % 4]}\n            </span>\n            <button onClick={this.sortFrames} className=\"iconButton\">\n              <img src={IMAGES[this.state.sortState % 4]} alt=\"sort\" />\n            </button>\n          </div>\n        </div>\n        <Flipper flipKey={this.state.sortState}>\n          {this.state.data.map((item, index) => {\n            return (\n              <Flipped key={item.id} flipId={item.id}>\n                <div className=\"FrameRow\" key={item.id}>\n                  <div className=\"checkbox\">\n                    <input\n                      className=\"checkbox__box\"\n                      type=\"checkbox\"\n                      checked={item.isSelected}\n                      onChange={this.handleSelect}\n                      id={`frame_${item.realId}`}\n                    />\n                    <label\n                      className=\"checkbox__label muted\"\n                      htmlFor={`frame_${item.realId}`}\n                    >\n                      <span>{item.name}</span>\n                    </label>\n                    {item.isUploading && (\n                      <Fade opposite when={item.isUploading || false}>\n                        <div className=\"loader\">\n                          <img src={loader} alt=\"loading\"></img>\n                        </div>\n                      </Fade>\n                    )}\n                    <Fade when={item.isUploadingDone || false}>\n                      <div className=\"done\">\n                        <img src={done} alt=\"done\" />\n                      </div>\n                    </Fade>\n                  </div>\n                </div>\n              </Flipped>\n            );\n          })}\n        </Flipper>\n      </div>\n    );\n  }\n}\n\nexport default List;\n","export const host = \"https://sync-to-slides.uc.r.appspot.com\";\nconst CLIENT_ID =\n  \"483899333633-5nfvf04rick2qvq7llt1vfcjj3jjhg3u.apps.googleusercontent.com\";\nconst DISCOVERY_DOCS = [\n  \"https://www.googleapis.com/discovery/v1/apis/slides/v1/rest\",\n  \"https://www.googleapis.com/discovery/v1/apis/storage/v1/rest\",\n];\nconst SCOPES =\n  \"https://www.googleapis.com/auth/presentations https://www.googleapis.com/auth/devstorage.read_write\";\n\nexport default {\n  getToken() {\n    return new Promise((resolve, reject) => {\n      window.addEventListener(\"message\", ({ data }) => {\n        if (data.pluginMessage && data.pluginMessage.type === \"fig-get-token\") {\n          resolve(data.pluginMessage.value);\n        }\n      });\n\n      window.parent.postMessage(\n        {\n          pluginMessage: { type: \"getToken\" },\n        },\n        \"*\"\n      );\n    });\n  },\n  setToken(value) {\n    return new Promise((resolve, reject) => {\n      window.addEventListener(\"message\", ({ data }) => {\n        if (data.pluginMessage && data.pluginMessage.type === \"fig-set-token\") {\n          if (data.pluginMessage.success) {\n            resolve(true);\n          } else {\n            reject(false);\n          }\n        }\n      });\n\n      window.parent.postMessage(\n        {\n          pluginMessage: { type: \"setToken\", value },\n        },\n        \"*\"\n      );\n    });\n  },\n  async authenticateAndGetToken() {\n    const { read_key, write_key } = await (await fetch(`${host}/keys`)).json();\n    window.open(\n      `${host}/start?write_key=${encodeURIComponent(write_key)}`,\n      \"_blank\"\n    );\n\n    let accessToken;\n    while (true) {\n      try {\n        const json = await (\n          await fetch(`${host}/finish?read_key=${encodeURIComponent(read_key)}`)\n        ).json();\n        if (json.access_token !== null) {\n          accessToken = json.access_token;\n          break;\n        }\n      } catch (e) {}\n\n      await new Promise((resolve) =>\n        setTimeout(resolve, 500 + 1000 * Math.random())\n      );\n    }\n    return accessToken;\n  },\n  async signOut() {\n    this.setToken(null);\n  },\n  async initClient() {\n    return window.gapi.client.init({\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: SCOPES,\n    });\n  },\n};\n","import React from \"react\";\n\nimport \"../styles/Message.scss\";\nimport loading from \"../assets/loading.svg\";\nimport success from \"../assets/done.svg\";\nimport error from \"../assets/error.svg\";\nimport lock from \"../assets/lock.svg\";\n\nclass Message extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      msg: \"\",\n      type: \"loading\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"Message\">\n        {this.state.msg !== \"\" && this.state.type === \"loading\" && (\n          <img src={loading} alt=\"loading\" />\n        )}\n        {this.state.type === \"success\" && <img src={success} alt=\"done\" />}\n        {this.state.type === \"error\" && <img src={error} alt=\"Failed\" />}\n        {this.state.type === \"lock\" && <img src={lock} alt=\"Locked\" />}\n        <div className=\"Text\">{this.state.msg}</div>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from \"react\";\n\nimport auth from \"../api/auth\";\nimport Storage from \"../api/storage\";\nimport Slides from \"../api/slides\";\nimport Message from \"./Message\";\nimport settings from \"../assets/settings.svg\";\nimport \"../styles/StatusBar.scss\";\n\nclass StatusBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSync = this.handleSync.bind(this);\n    this.handleMenu = this.handleMenu.bind(this);\n    this.logOut = this.logOut.bind(this);\n    this.hideMenu = this.hideMenu.bind(this);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.state = {\n      isDisabled: true,\n      isMenuOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  handleClickOutside(event) {\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      // alert(\"You clicked outside of me!\");\n      this.hideMenu();\n    }\n  }\n\n  async handleSync() {\n    let presentationId = window.ListComponent.state.id;\n    let selectedFrames = window.ListComponent.state.data.filter(\n      (e) => e.isSelected\n    );\n    this.showLoadingIndicator(selectedFrames);\n    window.parent.postMessage(\n      {\n        pluginMessage: {\n          type: \"get-image-data\",\n          data: { frames: selectedFrames, id: presentationId },\n        },\n      },\n      \"*\"\n    );\n    this.setState({ isDisabled: true });\n    window.Message.setState({\n      msg: \"Fetching data from figma...\",\n      type: \"loading\",\n    });\n  }\n\n  async handleUpload() {\n    let presentationId = window.ListComponent.state.id;\n    let uploadedImgs = await this.uploadImagesToCloudStore();\n    window.Message.setState({\n      msg: \"Fetching presentation info...\",\n      type: \"loading\",\n    });\n    new Slides(presentationId, uploadedImgs);\n  }\n\n  showLoadingIndicator(selectedFrames) {\n    let images = window.ListComponent.state.data;\n    selectedFrames.forEach((frame) => {\n      let i = images.findIndex((e) => e.id === frame.id);\n      images[i].isUploading = true;\n    });\n\n    window.ListComponent.setState({ data: images });\n  }\n\n  async uploadImagesToCloudStore() {\n    window.Message.setState({\n      msg: \"Uploading images to cloud...\",\n      type: \"loading\",\n    });\n    let images = window.ListComponent.state.data;\n    let selectedImages = window.ListComponent.state.data.filter(\n      (e) => e.isSelected\n    );\n    let uploadedImages = await Promise.all(\n      selectedImages.map(async (img) => {\n        let i = images.findIndex((e) => e.id === img.id);\n        images[i].isUploading = true;\n        window.ListComponent.setState({ data: images });\n        let base64String = btoa(\n          new Uint8Array(img.imageData).reduce(\n            (data, byte) => data + String.fromCharCode(byte),\n            \"\"\n          )\n        );\n        img.base64Data = base64String;\n        let storage = new Storage(img);\n        let imageData = await storage.insert();\n\n        let j = images.findIndex((e) => e.id === img.id);\n        images[j].isUploading = false;\n        images[j].isUploadingDone = true;\n\n        window.ListComponent.setState({ data: images });\n\n        return imageData;\n      })\n    );\n\n    return uploadedImages;\n  }\n\n  handleMenu() {\n    this.setState({ isMenuOpen: !this.state.isMenuOpen });\n  }\n\n  logOut() {\n    auth.signOut();\n    this.hideMenu();\n    this.props.updateSignInStatus({\n      isSignedIn: false,\n      isFinishedChecking: true,\n    });\n  }\n\n  hideMenu() {\n    this.setState({ isMenuOpen: false });\n  }\n\n  render() {\n    return (\n      <div className=\"StatusBar\">\n        <div className=\"Actions\">\n          <button\n            className=\"button button--primary\"\n            disabled={this.state.isDisabled}\n            onClick={this.handleSync}\n          >\n            Sync to Slides\n          </button>\n        </div>\n        <div className=\"Status\">\n          <Message\n            ref={(Message) => {\n              window.Message = Message;\n            }}\n          ></Message>\n          <div style={{ flex: 1 }}></div>\n          <div className=\"menu\" ref={this.setWrapperRef}>\n            <button\n              className=\"iconButton\"\n              onClick={this.handleMenu}\n              tabIndex=\"0\"\n            >\n              <img src={settings} alt=\"Settings\" />\n            </button>\n            {this.state.isMenuOpen && (\n              <div className=\"menu-items\">\n                {/* <div className=\"menu-item\">\n                <div>Siddhartha Gudipati</div>\n                <div>gsid@google.com</div>\n              </div>\n              <div className=\"menu-item divider\"></div> */}\n                <div className=\"menu-item\" onClick={this.logOut}>\n                  Logout\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default StatusBar;\n","import React from \"react\";\nimport auth from \"../api/auth\";\nimport \"../styles/Login.scss\";\nimport logo from \"../assets/logo.svg\";\nimport logoText from \"../assets/logo-text.svg\";\nimport g from \"../assets/g.svg\";\n\nclass Login extends React.Component {\n  host = \"https://sync-to-slides-public.uc.r.appspot.com\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n    this.signIn = this.signIn.bind(this);\n  }\n\n  async signIn() {\n    let accessToken;\n    accessToken = await auth.authenticateAndGetToken();\n    let success = await auth.setToken(accessToken);\n    if (success) {\n      this.props.updateSignInStatus({\n        isSignedIn: true,\n        isFinishedChecking: true,\n      });\n      auth.initClient().then(() => {\n        window.gapi.client.setToken({ access_token: accessToken });\n        window.parent.postMessage(\n          { pluginMessage: { type: \"get-frames\" } },\n          \"*\"\n        );\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <div className=\"large-header\"></div>\n        <div className=\"header\"></div>\n        <div className=\"logo animated fadeIn\">\n          <img src={logo} alt=\"\" />\n        </div>\n        <div className=\"body\">\n          <div className=\"title animated fadeInUp\">\n            <img src={logoText} alt=\"Logo\" />\n          </div>\n          <div className=\"title-content animated fadeInUp\">\n            <p>\n              Upload frames to Google Slides with ease. For a hassle free\n              presentation making.\n            </p>\n          </div>\n\n          <div className=\"signInButton animated fadeInUp\">\n            <button id=\"signIn\" className=\"sign-in\" onClick={this.signIn}>\n              <div className=\"g-logo\">\n                <img src={g} alt=\"Google G\" />\n              </div>\n              <span>Sign in with Google </span>\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport \"../styles/Loading.scss\";\n\nclass Loading extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"Loading\">\n        <div className=\"loader\">\n          <svg x=\"0px\" y=\"0px\" width=\"24px\" height=\"30px\" viewBox=\"0 0 24 30\">\n            <rect x=\"0\" y=\"10\" width=\"4\" height=\"10\" fill=\"#888\" opacity=\"0.2\">\n              <animate\n                attributeName=\"opacity\"\n                attributeType=\"XML\"\n                values=\"0.2; 1; .2\"\n                begin=\"0s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"height\"\n                attributeType=\"XML\"\n                values=\"10; 20; 10\"\n                begin=\"0s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"y\"\n                attributeType=\"XML\"\n                values=\"10; 5; 10\"\n                begin=\"0s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n            </rect>\n            <rect x=\"8\" y=\"10\" width=\"4\" height=\"10\" fill=\"#888\" opacity=\"0.2\">\n              <animate\n                attributeName=\"opacity\"\n                attributeType=\"XML\"\n                values=\"0.2; 1; .2\"\n                begin=\"0.15s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"height\"\n                attributeType=\"XML\"\n                values=\"10; 20; 10\"\n                begin=\"0.15s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"y\"\n                attributeType=\"XML\"\n                values=\"10; 5; 10\"\n                begin=\"0.15s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n            </rect>\n            <rect x=\"16\" y=\"10\" width=\"4\" height=\"10\" fill=\"#888\" opacity=\"0.2\">\n              <animate\n                attributeName=\"opacity\"\n                attributeType=\"XML\"\n                values=\"0.2; 1; .2\"\n                begin=\"0.3s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"height\"\n                attributeType=\"XML\"\n                values=\"10; 20; 10\"\n                begin=\"0.3s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n              <animate\n                attributeName=\"y\"\n                attributeType=\"XML\"\n                values=\"10; 5; 10\"\n                begin=\"0.3s\"\n                dur=\"0.6s\"\n                repeatCount=\"indefinite\"\n              />\n            </rect>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loading;\n","import React from \"react\";\nimport AddressBar from \"./components/AddressBar\";\nimport List from \"./components/List\";\nimport StatusBar from \"./components/StatusBar\";\nimport Login from \"./components/Login\";\nimport Loading from \"./components/Loading\";\nimport auth from \"./api/auth\";\n\nimport \"./styles/App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isSignedIn: false,\n      isFinishedChecking: false,\n    };\n    this.initClient = this.initClient.bind(this);\n\n    window.gapi.load(\"client:auth2\", this.initClient);\n  }\n\n  async initClient() {\n    let accessToken = await auth.getToken();\n\n    let tokenInfo = await (\n      await fetch(\n        `https://oauth2.googleapis.com/tokeninfo?access_token=${accessToken}`\n      )\n    ).json();\n\n    if (tokenInfo.error) {\n      this.setState({\n        isSignedIn: false,\n        isFinishedChecking: true,\n      });\n    } else {\n      auth.initClient().then(async () => {\n        window.gapi.client.setToken({\n          access_token: accessToken,\n        });\n        this.setState({\n          isSignedIn: true,\n          isFinishedChecking: true,\n        });\n        window.parent.postMessage(\n          { pluginMessage: { type: \"get-frames\" } },\n          \"*\"\n        );\n      });\n    }\n  }\n\n  updateSignInStatus = (state) => {\n    this.setState(state);\n  };\n\n  render() {\n    const isSignedIn = this.state.isSignedIn;\n    const isFinishedChecking = this.state.isFinishedChecking;\n\n    let page = (\n      <div className=\"App\">\n        <Loading></Loading>\n      </div>\n    );\n\n    if (isFinishedChecking && isSignedIn) {\n      page = (\n        <div className=\"App\">\n          <AddressBar\n            ref={(AddressBar) => {\n              window.AddressBar = AddressBar;\n            }}\n            className=\"header\"\n          ></AddressBar>\n          <List\n            className=\"body\"\n            ref={(ListComponent) => {\n              window.ListComponent = ListComponent;\n            }}\n          ></List>\n          <StatusBar\n            ref={(StatusBar) => {\n              window.StatusBar = StatusBar;\n            }}\n            updateSignInStatus={this.updateSignInStatus}\n            className=\"footer\"\n          ></StatusBar>\n        </div>\n      );\n    }\n\n    if (isFinishedChecking && !isSignedIn) {\n      page = (\n        <div className=\"App\">\n          <Login updateSignInStatus={this.updateSignInStatus}></Login>\n        </div>\n      );\n    }\n\n    return page;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/Var.scss\";\nimport \"./styles/Index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// Listen to the messages\nwindow.addEventListener(\"message\", async (event) => {\n  const pluginMessage = event.data.pluginMessage;\n\n  if (!pluginMessage) {\n    return;\n  }\n\n  if (pluginMessage.type === \"fig-frames\") {\n    window.ListComponent.setState({\n      data: pluginMessage.data,\n      originalData: [...pluginMessage.data],\n    });\n\n    let frames = window.ListComponent.state.data;\n    let frame = frames.find((s) => s.isSelected === true);\n    window.StatusBar.setState({\n      isDisabled: frame ? false : true,\n    });\n  }\n\n  if (pluginMessage.type === \"fig-preso-data\") {\n    window.AddressBar.setState({\n      data: pluginMessage.data,\n    });\n\n    window.ListComponent.setState({\n      data: window.ListComponent.state.data,\n      originalData: [...window.ListComponent.state.originalData],\n      id: pluginMessage.data.id,\n    });\n  }\n\n  if (pluginMessage.type === \"fig-image-data\") {\n    let imgData = pluginMessage.data.imageData;\n\n    let newData = window.ListComponent.state.data.map((e) => {\n      let img = imgData.find((l) => l.realId === e.realId);\n      return img ? img : e;\n    });\n\n    window.ListComponent.setState({\n      data: newData,\n      originalData: [...newData],\n      id: pluginMessage.data.id,\n    });\n\n    window.StatusBar.handleUpload();\n  }\n\n  // if (pluginMessage.type === \"getToken\") {\n  //   console.log(\"comes here...\");\n  // }\n});\n"],"sourceRoot":""}